,RequestNumAppName,FeatureRequest,TextAnnotation-GT,TextAnnotation-GT-Formatted,TextAnnotation-GT-TupleFormat,PromptForGeneration
0,555-Signal,"Request Number - 555 | Request Title - Not working in dual sim phone | Request Description - My friend has a dual sim Lava iris 405 and i have samsung galaxy s3. we both have installed the TextSecure when i start secure session, it sends Key exchange message and its received in my friends. After that it says Received and processed key exchange message but he is unable to send me any message, it says error sending. i know its giving problem because its a dual sim phone, text secure app is not able to send sms from particular sim and giving this error. Is dual sim phone supported by textSecure?","['friends.', 'and processed key exchange']","Extracted Syntactic ambiguity text segment(s): ['friends.', 'and processed key exchange']","[('The sentence is incomplete and is missing a word at the end. ', 'friends.'), ('Missing tokens in the sentence can cause multiple interpretations. A gap in a sentence cause by omission of a lexically or syntactically necessary constituent. ', 'and processed key exchange')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 555 | Request Title - Not working in dual sim phone | Request Description - My friend has a dual sim Lava iris 405 and i have samsung galaxy s3. we both have installed the TextSecure when i start secure session, it sends Key exchange message and its received in my friends. After that it says Received and processed key exchange message but he is unable to send me any message, it says error sending. i know its giving problem because its a dual sim phone, text secure app is not able to send sms from particular sim and giving this error. Is dual sim phone supported by textSecure?
####
Extracted Syntactic ambiguity segment(s):"
1,6390-Signal,"Request Number - 6390 | Request Title - Notify sender if Signal message has been sent but not delivered to recipient after some time | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. Recipients who are registered for Signal may not be able to receive secure signal messages due to reasons such as:  temporary unavailability of internet access (e.g. prepay plans with hard data caps; otherwise intermittent data connectivity) permanent unavailability having uninstalled Signal without first unregistering Neither of these are apparent to the sender, and sending a Signal message results in the message sitting on the server for some undefined length of time. The sender does not get notified that while their message has been sent to the server, it has not been delivered to the recipient, leading to frustration once the fact is discovered ( #6377 , #2285 (comment) etc). The status is available in conversation UI in the form of one tick vs two ticks, but this requires the sender to explicitly check back in the conversation UI. It would improve the user experience if a signal message that was sent but not delivered after some timeout (minutes?) triggered a ""lack of delivery"" notification on the senders phone along the lines of ""Your secure message to YYY could not be delivered after N minutes. Would you like to resend via insecure SMS?"" This way it is up to the user to explicitly fall back to the less secure protocol. (This notification proposal is orthogonal to but complementary to the ability of Signal to better remember the per-contact preference of transport channel suggested in #2285 , #845 (comment) etc. It would also serve as an easier to implement and more secure alternative to automatically falling back to SMS as suggested in #678 , #2847 , #3074 , #4009 , #5001 )",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 6390 | Request Title - Notify sender if Signal message has been sent but not delivered to recipient after some time | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. Recipients who are registered for Signal may not be able to receive secure signal messages due to reasons such as:  temporary unavailability of internet access (e.g. prepay plans with hard data caps; otherwise intermittent data connectivity) permanent unavailability having uninstalled Signal without first unregistering Neither of these are apparent to the sender, and sending a Signal message results in the message sitting on the server for some undefined length of time. The sender does not get notified that while their message has been sent to the server, it has not been delivered to the recipient, leading to frustration once the fact is discovered ( #6377 , #2285 (comment) etc). The status is available in conversation UI in the form of one tick vs two ticks, but this requires the sender to explicitly check back in the conversation UI. It would improve the user experience if a signal message that was sent but not delivered after some timeout (minutes?) triggered a ""lack of delivery"" notification on the senders phone along the lines of ""Your secure message to YYY could not be delivered after N minutes. Would you like to resend via insecure SMS?"" This way it is up to the user to explicitly fall back to the less secure protocol. (This notification proposal is orthogonal to but complementary to the ability of Signal to better remember the per-contact preference of transport channel suggested in #2285 , #845 (comment) etc. It would also serve as an easier to implement and more secure alternative to automatically falling back to SMS as suggested in #678 , #2847 , #3074 , #4009 , #5001 )
####
Extracted Syntactic ambiguity segment(s):"
2,316-Signal,"Request Number - 316 | Request Title - Feature request: Allow sharing Android calendar events via TextSecure | Request Description - Originally a bug, which should have been titled ""Shared calendar events are not actually attached."" The fix in #1025 removed TS from the ""share with"" list of calendar events, so no longer a bug, but would like to be able to share calendar events via TS, same as can be done with default Android text app. Original (bug) text: Android default Calendar app lets you send a calendar entry. TextSecure is one of the apps that comes up as an option to use for sending. Choosing it, you get to TextSecure, but there is no attachment, just an empty message. (If you choose the regular default Android Text Messaging app, the calendar entry does get properly attached, which is why I suspect the issue is with TextSecure.) Only tried doing this from Calendar, don't know if it's an issue sending via TextSecure from other apps.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 316 | Request Title - Feature request: Allow sharing Android calendar events via TextSecure | Request Description - Originally a bug, which should have been titled ""Shared calendar events are not actually attached."" The fix in #1025 removed TS from the ""share with"" list of calendar events, so no longer a bug, but would like to be able to share calendar events via TS, same as can be done with default Android text app. Original (bug) text: Android default Calendar app lets you send a calendar entry. TextSecure is one of the apps that comes up as an option to use for sending. Choosing it, you get to TextSecure, but there is no attachment, just an empty message. (If you choose the regular default Android Text Messaging app, the calendar entry does get properly attached, which is why I suspect the issue is with TextSecure.) Only tried doing this from Calendar, don't know if it's an issue sending via TextSecure from other apps.
####
Extracted Syntactic ambiguity segment(s):"
3,4049-Signal,Request Number - 4049 | Request Title - delivery indicator in conversation list item | Request Description - the conversation summary should show the most recent message's delivery status if it's outgoing,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 4049 | Request Title - delivery indicator in conversation list item | Request Description - the conversation summary should show the most recent message's delivery status if it's outgoing
####
Extracted Syntactic ambiguity segment(s):"
4,1363-Signal,Request Number - 1363 | Request Title - Indicating in the conservation overview whether the last message is yours or from your conversation partner | Request Description - Description given.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1363 | Request Title - Indicating in the conservation overview whether the last message is yours or from your conversation partner | Request Description - Description given.
####
Extracted Syntactic ambiguity segment(s):"
5,8-Mastodon,Request Number - 8 | Request Title - Add local and federated timeline | Request Description - At the moment there seems to be no way to access local and federated timeline. Please consider adding that feature.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 8 | Request Title - Add local and federated timeline | Request Description - At the moment there seems to be no way to access local and federated timeline. Please consider adding that feature.
####
Extracted Syntactic ambiguity segment(s):"
6,7310-Signal,"Request Number - 7310 | Request Title - Feature: add support for custom url sceme signal:// so we can have share buttons | Request Description - [x ] searched open and closed issues for duplicates [x ] read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. I maintain a website, and I would love to put signal share buttons on my articles. To do so, there needs to be a way to point to the signal app from webpages. The manner to do this without many compatibility issues is a custom url sceme: signal:// I know, custom url scemes could be considered bad practice since they pollude the namespace. I agree, but for now signal can't compete with other social media from a buisness standpoint because of missing features like these. This may keep a lot of people from using signal as their favorite messenger app. (world domination is not the goal, but we don't want to shoot ourselfs in the foot either, private messaging will only happen if your contacts are also willing to accept signal on their phone.) Lets consider having share buttons on websites. A custom url sceme would be a good start to make that possible. Send message to Signal Private Messenger Read more about this here",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 7310 | Request Title - Feature: add support for custom url sceme signal:// so we can have share buttons | Request Description - [x ] searched open and closed issues for duplicates [x ] read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. I maintain a website, and I would love to put signal share buttons on my articles. To do so, there needs to be a way to point to the signal app from webpages. The manner to do this without many compatibility issues is a custom url sceme: signal:// I know, custom url scemes could be considered bad practice since they pollude the namespace. I agree, but for now signal can't compete with other social media from a buisness standpoint because of missing features like these. This may keep a lot of people from using signal as their favorite messenger app. (world domination is not the goal, but we don't want to shoot ourselfs in the foot either, private messaging will only happen if your contacts are also willing to accept signal on their phone.) Lets consider having share buttons on websites. A custom url sceme would be a good start to make that possible. Send message to Signal Private Messenger Read more about this here
####
Extracted Syntactic ambiguity segment(s):"
7,5775-Signal,"Request Number - 5775 | Request Title - Add longer-term disappearing timeouts | Request Description - I have looked at all open and closed issues containing ""disappearing"" here and in the libsignal-java repo. I hope the bug belongs to this repo, sorry if not! For my use case, the 30s/.../1 week periods for disappearing messages are not useful. I quite often want to have a look at messages written within the last month. I'd thus not use the feature at all, even though in principle I think it is a good idea. I'd suggest to add further periods up to at least one year or something. (As I'm thinking of it, maybe it should even be 13 months rather than 12, so you can re-read what you were discussing on your last year's birthday or last christmas or whatever, and it only disappears little after) (Signal 3.19.1 on Android 6.0.1 / CM 13)",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5775 | Request Title - Add longer-term disappearing timeouts | Request Description - I have looked at all open and closed issues containing ""disappearing"" here and in the libsignal-java repo. I hope the bug belongs to this repo, sorry if not! For my use case, the 30s/.../1 week periods for disappearing messages are not useful. I quite often want to have a look at messages written within the last month. I'd thus not use the feature at all, even though in principle I think it is a good idea. I'd suggest to add further periods up to at least one year or something. (As I'm thinking of it, maybe it should even be 13 months rather than 12, so you can re-read what you were discussing on your last year's birthday or last christmas or whatever, and it only disappears little after) (Signal 3.19.1 on Android 6.0.1 / CM 13)
####
Extracted Syntactic ambiguity segment(s):"
8,597-Signal,"Request Number - 597 | Request Title - Display sent time instead of received time | Request Description - It would be nice if there is an option in the settings to display the sent time (as displayed in the ""message details"") instead of the received time next to the messages.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 597 | Request Title - Display sent time instead of received time | Request Description - It would be nice if there is an option in the settings to display the sent time (as displayed in the ""message details"") instead of the received time next to the messages.
####
Extracted Syntactic ambiguity segment(s):"
9,757-Signal,"Request Number - 757 | Request Title - different notification settings for group chats | Request Description - It would be very nice to be able to change the notification settings for goups independently from other (personal) chats, as group chats might have a lower priority for the user.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 757 | Request Title - different notification settings for group chats | Request Description - It would be very nice to be able to change the notification settings for goups independently from other (personal) chats, as group chats might have a lower priority for the user.
####
Extracted Syntactic ambiguity segment(s):"
10,898-Signal,"Request Number - 898 | Request Title - Search field missing in group creation dialog | Request Description - When creating a group and adding contacts, there is no search field on top of the contact list. This search field is present when composing a single message and a contact must be picked. Because it's missing in the contact picker when creating a group, it is harder to add contacts to a group.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 898 | Request Title - Search field missing in group creation dialog | Request Description - When creating a group and adding contacts, there is no search field on top of the contact list. This search field is present when composing a single message and a contact must be picked. Because it's missing in the contact picker when creating a group, it is harder to add contacts to a group.
####
Extracted Syntactic ambiguity segment(s):"
11,5238-Signal,"Request Number - 5238 | Request Title - Conveniently raise-to-speak and raise-to-listen Voice messages | Request Description - Telegram 3.5 added the very convenient raise-to-speak and raise-to-listen feature for voice messages: When a chat is open, bring your phone to your ear (as if taking a phone call) to listen to new voice messages or record a new one after the signal. Voice messaging is one of the most popular features of Wazzapp, raise-to-speak  and raise-to-listen would make it much easier to use, even better than the competition!",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5238 | Request Title - Conveniently raise-to-speak and raise-to-listen Voice messages | Request Description - Telegram 3.5 added the very convenient raise-to-speak and raise-to-listen feature for voice messages: When a chat is open, bring your phone to your ear (as if taking a phone call) to listen to new voice messages or record a new one after the signal. Voice messaging is one of the most popular features of Wazzapp, raise-to-speak  and raise-to-listen would make it much easier to use, even better than the competition!
####
Extracted Syntactic ambiguity segment(s):"
12,1875-Signal,"Request Number - 1875 | Request Title - Import backup: Please tell me how old the backup is I am going to import | Request Description - I would like the 'import backup' screen, that asks me whether I want to continue (""... will completely replace your existing keys, preferences, and messages""), to tell me the date of the backup I am going to import. (I mistakenly thought TS would automatically, regularly, create encrypted backups (like it should be, IMHO) and imported a backup from February -- half a year of messages and photos gone. Didn't know about #1631 )",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1875 | Request Title - Import backup: Please tell me how old the backup is I am going to import | Request Description - I would like the 'import backup' screen, that asks me whether I want to continue (""... will completely replace your existing keys, preferences, and messages""), to tell me the date of the backup I am going to import. (I mistakenly thought TS would automatically, regularly, create encrypted backups (like it should be, IMHO) and imported a backup from February -- half a year of messages and photos gone. Didn't know about #1631 )
####
Extracted Syntactic ambiguity segment(s):"
13,5529-Signal,"Request Number - 5529 | Request Title - Disable ""Screen security"" by default | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Feature description. It's quite common to see non-passphrase users wonder why screenshots in Signal don't work. It probably doesn't make sense to have Screen security enabled by default for them. For passphrase users it makes sense. One option would be to remove the feature completely from settings and make it an implicit feature which depends on the passphrase setting. In #1431 (comment) moxie0 wrote: [The Screen security feature i]s not designed to prevent screenshots, it's designed to notify the task manager that it shouldn't cache screenshots of conversations. The side effect is that it prevents screenshots.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5529 | Request Title - Disable ""Screen security"" by default | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Feature description. It's quite common to see non-passphrase users wonder why screenshots in Signal don't work. It probably doesn't make sense to have Screen security enabled by default for them. For passphrase users it makes sense. One option would be to remove the feature completely from settings and make it an implicit feature which depends on the passphrase setting. In #1431 (comment) moxie0 wrote: [The Screen security feature i]s not designed to prevent screenshots, it's designed to notify the task manager that it shouldn't cache screenshots of conversations. The side effect is that it prevents screenshots.
####
Extracted Syntactic ambiguity segment(s):"
14,778-Signal,"Request Number - 778 | Request Title - Feature Request: Only one notification for multiple messages received at once + Timestamps | Request Description - After being offline (flight mode / no internet connection) my device rings/vibrates multiple times, depending on how many messages have been sent by others in the meantime. Being in a quite active group my device vibrated for about 30 seconds this morning. I can see the point of being notified that not only one but multiple messages have been received but this should be reworked to a less annoying way (e.g., ring twice for multiple messages). Additionally, all messages that get then received are displayed with their receiving time. I would prefer having them displayed with the sending time, which can also be seen by looking in the message details. Maybe a menu entry to switch between both options would be a good idea because I can imagine people who like it the way it is handled now.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 778 | Request Title - Feature Request: Only one notification for multiple messages received at once + Timestamps | Request Description - After being offline (flight mode / no internet connection) my device rings/vibrates multiple times, depending on how many messages have been sent by others in the meantime. Being in a quite active group my device vibrated for about 30 seconds this morning. I can see the point of being notified that not only one but multiple messages have been received but this should be reworked to a less annoying way (e.g., ring twice for multiple messages). Additionally, all messages that get then received are displayed with their receiving time. I would prefer having them displayed with the sending time, which can also be seen by looking in the message details. Maybe a menu entry to switch between both options would be a good idea because I can imagine people who like it the way it is handled now.
####
Extracted Syntactic ambiguity segment(s):"
15,152-Mastodon,"Request Number - 152 | Request Title - Display MD lists correctly | Request Description - I'm using the Mastodon app with my profile on mstdn.social which supports Markdown toots. Unfortunately, the Mastodon app isn't able to display MD lists correctly. Instead of putting each list item into a new line, it shrinks the complete list into a single line:  For comparison: Tusky is perfectly capable of at least inserting line breaks:",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 152 | Request Title - Display MD lists correctly | Request Description - I'm using the Mastodon app with my profile on mstdn.social which supports Markdown toots. Unfortunately, the Mastodon app isn't able to display MD lists correctly. Instead of putting each list item into a new line, it shrinks the complete list into a single line:  For comparison: Tusky is perfectly capable of at least inserting line breaks:
####
Extracted Syntactic ambiguity segment(s):"
16,957-Signal,"Request Number - 957 | Request Title - Delivery reports for PUSHed messages? | Request Description - SMS messages support the notion of a delivery report that allows me to see when a message was actually delivered to the recipient. I miss that feature for PUSHed messages, though. It seems there is no way to request a delivery report?",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 957 | Request Title - Delivery reports for PUSHed messages? | Request Description - SMS messages support the notion of a delivery report that allows me to see when a message was actually delivered to the recipient. I miss that feature for PUSHed messages, though. It seems there is no way to request a delivery report?
####
Extracted Syntactic ambiguity segment(s):"
17,1283-Signal,"Request Number - 1283 | Request Title -Theme Support | Request Description - I\'m trying to convince a friend to use TextSecure but the themes from stuff like Go SMS PRO is keeping them on that platform unfortunately :( Maybe not a top priority feature, but it might help with adoption.
                    ",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1283 | Request Title -Theme Support | Request Description - I\'m trying to convince a friend to use TextSecure but the themes from stuff like Go SMS PRO is keeping them on that platform unfortunately :( Maybe not a top priority feature, but it might help with adoption.
                    
####
Extracted Syntactic ambiguity segment(s):"
18,5904-Signal,"Request Number - 5904 | Request Title - archived/blocked flags are not part of xml backup | Request Description - After importing messages from .xml backup, previously archived messages are all placed in main folder. Also 'blocked' flag is gone. I'm talking about only those messages that were part of the backup (probably already received messages and their flags are intact). I was expecting that 'archive' and 'blocked' flags are part of .xml backup. This is part of my backup (entries from one thread). For sure I've moved all messages from this number to archive and blocked the conversation. <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5904 | Request Title - archived/blocked flags are not part of xml backup | Request Description - After importing messages from .xml backup, previously archived messages are all placed in main folder. Also 'blocked' flag is gone. I'm talking about only those messages that were part of the backup (probably already received messages and their flags are intact). I was expecting that 'archive' and 'blocked' flags are part of .xml backup. This is part of my backup (entries from one thread). For sure I've moved all messages from this number to archive and blocked the conversation. <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""2"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />  <sms protocol=""0"" address=""<cut>"" date=""<cut>"" type=""1"" subject=""null"" body=""<cut>"" toa=""null"" sc_toa=""null"" service_center=""null"" read=""1"" status=""-1"" locked=""0"" />
####
Extracted Syntactic ambiguity segment(s):"
19,72-Signal,Request Number - 72 | Request Title - Message content preview in notification bar | Request Description - I'd like to get a preview of the messagge in notification bar. Could be also good a JB-style quick reply fuction. Thanks for your working and this awesome software!,['in notification bar.'],Extracted Syntactic ambiguity text segment(s): ['in notification bar.'],"[('The prepositional phrase ""in (the) notification bar"" can attach to either \'message\' or \'preview\', creating two possible interpretations.', 'in notification bar.')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 72 | Request Title - Message content preview in notification bar | Request Description - I'd like to get a preview of the messagge in notification bar. Could be also good a JB-style quick reply fuction. Thanks for your working and this awesome software!
####
Extracted Syntactic ambiguity segment(s):"
20,1504-Signal,Request Number - 1504 | Request Title - Notification Color for Individual Contacts or Groups | Request Description - how about we edit this one too?  or just delete it..... üôà,['Individual Contacts or Groups'],Extracted Syntactic ambiguity text segment(s): ['Individual Contacts or Groups'],"[('A conjunction ""or"" is used with a modifier ""individual,"" which triggers syntactic coordination ambiguity. As a result, the phrase ""individual contacts or groups"" can be parsed and grouped differently: ((individual contacts) or groups); (individual (contacts or groups)).', 'Individual Contacts or Groups')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1504 | Request Title - Notification Color for Individual Contacts or Groups | Request Description - how about we edit this one too?  or just delete it..... üôà
####
Extracted Syntactic ambiguity segment(s):"
21,276-Signal,"Request Number - 276 | Request Title - Saving Attachments - where do they go? | Request Description - This is hopefully a daft question, but I can't find the answer anywhere. I've received a nice picture via MMS into TextSecure 0.9.9.7. It looks okay in the message thread, and clicking it gives me the warning about needing to decrypt it, but then it loads perfectly into my image viewer. If I tap+hold the image, I'm then warned about needing to decrypt it to put it on the external SD card, it then takes maybe half a second while it says ""Saving attachment..."", and then ""Success"" flashes up. Despite all of this, I can't find the attachment anywhere on my phone :-( (I've used ES File Explorer to search for various filenames, but to no avail). I had a look in the source code; it looks like it's saving to Environment.getExternalStorageDirectory(), but none of the obvious locations seem to have the picture in them. Any idea where attachments end up? (If it matters, I'm using a Samsung Galaxy S2 GT-I9100 running Jellybean 4.1.2).",['the source code;'],Extracted Syntactic ambiguity text segment(s): ['the source code;'],"[('A word qualifying the origin of the source code was omitted for brevity, creating multiple possible meanings.', 'the source code;')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 276 | Request Title - Saving Attachments - where do they go? | Request Description - This is hopefully a daft question, but I can't find the answer anywhere. I've received a nice picture via MMS into TextSecure 0.9.9.7. It looks okay in the message thread, and clicking it gives me the warning about needing to decrypt it, but then it loads perfectly into my image viewer. If I tap+hold the image, I'm then warned about needing to decrypt it to put it on the external SD card, it then takes maybe half a second while it says ""Saving attachment..."", and then ""Success"" flashes up. Despite all of this, I can't find the attachment anywhere on my phone :-( (I've used ES File Explorer to search for various filenames, but to no avail). I had a look in the source code; it looks like it's saving to Environment.getExternalStorageDirectory(), but none of the obvious locations seem to have the picture in them. Any idea where attachments end up? (If it matters, I'm using a Samsung Galaxy S2 GT-I9100 running Jellybean 4.1.2).
####
Extracted Syntactic ambiguity segment(s):"
22,170-Mastodon,Request Number - 170 | Request Title - Option to hide reblogs from people you follow | Request Description - In the dropdown on profiles.,"['from people you follow', 'In the dropdown on profiles.']","Extracted Syntactic ambiguity text segment(s): ['from people you follow', 'In the dropdown on profiles.']","[('The highlighted prepositional phrase can attach to multiple targets in the sentence, which creates multiple possible interpretations.', 'from people you follow'), (""Words have been omitted for brevity however assumptions about what those words may be can create multiple possible interpretations of the author's intent."", 'In the dropdown on profiles.')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 170 | Request Title - Option to hide reblogs from people you follow | Request Description - In the dropdown on profiles.
####
Extracted Syntactic ambiguity segment(s):"
23,222-Signal,"Request Number - 222 | Request Title - Feature: Blocking | Request Description - Blocking by user-specified phone number, via something like an email filter rule where the messages from the number are deleted upon receipt and no notification is given.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 222 | Request Title - Feature: Blocking | Request Description - Blocking by user-specified phone number, via something like an email filter rule where the messages from the number are deleted upon receipt and no notification is given.
####
Extracted Syntactic ambiguity segment(s):"
24,592-Signal,"Request Number - 592 | Request Title - Feature - Emoji | Request Description - I hate emoji, but this guy on this issue requested it and I figure I'll help him/you out by making a new issue/feature request.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 592 | Request Title - Feature - Emoji | Request Description - I hate emoji, but this guy on this issue requested it and I figure I'll help him/you out by making a new issue/feature request.
####
Extracted Syntactic ambiguity segment(s):"
25,496-Signal,Request Number - 496 | Request Title - Feature Request: Ability to change maximum size of MMS | Request Description - I have seen this feature on other third party messaging apps it'd be great.  Thanks!,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 496 | Request Title - Feature Request: Ability to change maximum size of MMS | Request Description - I have seen this feature on other third party messaging apps it'd be great.  Thanks!
####
Extracted Syntactic ambiguity segment(s):"
26,2943-Signal,Request Number - 2943 | Request Title - Where are the old text-only smileys? | Request Description - Why did you remove the old text based smileys? I don't like all this emoji crap and preferred the other ones.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 2943 | Request Title - Where are the old text-only smileys? | Request Description - Why did you remove the old text based smileys? I don't like all this emoji crap and preferred the other ones.
####
Extracted Syntactic ambiguity segment(s):"
27,36-Mastodon,"Request Number - 36 | Request Title - Feature request: Fediverse service label | Request Description - For example, Fedilab shows which service the profile is for, i.e. whether it is a Mastodon, Pixelfed, PeerTube, etc. account. Something similar for the official Mastodon app would be desirable, as it shows newcomers that theFediverse is more than just Mastodon.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 36 | Request Title - Feature request: Fediverse service label | Request Description - For example, Fedilab shows which service the profile is for, i.e. whether it is a Mastodon, Pixelfed, PeerTube, etc. account. Something similar for the official Mastodon app would be desirable, as it shows newcomers that theFediverse is more than just Mastodon.
####
Extracted Syntactic ambiguity segment(s):"
28,969-Signal,"Request Number - 969 | Request Title - Color incoming messages in groups according to author | Request Description - Since there's so many UX experts around lately, I want to propose this: In groups, I always find it kind of annoying to have to read the name of the sender of a message. Somehow that distracts me from the actual messages. What do you think about this: In a group message, every incoming message is colored based on the author. Basically, we'd need a ""string to RGB"" hash function (shouldn't be that hard) and then color the background of their messages with 20% opacity (or so..) That way, I know that everything that's green is from my Buddy Bob, and everything that's yellow is from Alice, and I can just read the whole conversation without reading the name in front of every single message...",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 969 | Request Title - Color incoming messages in groups according to author | Request Description - Since there's so many UX experts around lately, I want to propose this: In groups, I always find it kind of annoying to have to read the name of the sender of a message. Somehow that distracts me from the actual messages. What do you think about this: In a group message, every incoming message is colored based on the author. Basically, we'd need a ""string to RGB"" hash function (shouldn't be that hard) and then color the background of their messages with 20% opacity (or so..) That way, I know that everything that's green is from my Buddy Bob, and everything that's yellow is from Alice, and I can just read the whole conversation without reading the name in front of every single message...
####
Extracted Syntactic ambiguity segment(s):"
29,817-Signal,"Request Number - 817 | Request Title - Display shorter fingerprint, enable sharing of fingerprint | Request Description - To enable faster sharing of the fingerprint, let the user copy the fingerprint and send it over a secure channel (inform the user that the channel needs to be secure). Also, don't display the hex of the fingerprint but rather something the user can easily read out:  base58-encoding poetry-encoding",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 817 | Request Title - Display shorter fingerprint, enable sharing of fingerprint | Request Description - To enable faster sharing of the fingerprint, let the user copy the fingerprint and send it over a secure channel (inform the user that the channel needs to be secure). Also, don't display the hex of the fingerprint but rather something the user can easily read out:  base58-encoding poetry-encoding
####
Extracted Syntactic ambiguity segment(s):"
30,916-Signal,"Request Number - 916 | Request Title - Allow to set and sync Contact Pictures | Request Description - Allow users to set their own contact picture and sync it to other TextSecure users. In contrast to WhatsApp, provide those pictures to the system contact list to be used in any app, including but not limited to TextSecure. Is this possible using a SyncAdapter ( #890 ) coupled with a ContentProvider?",['own contact picture'],Extracted Syntactic ambiguity text segment(s): ['own contact picture'],"[('The selected text contains a prenominal double possessive, which creates multiple possible meanings depending on which word in the series the first possessive modifies.', 'own contact picture')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 916 | Request Title - Allow to set and sync Contact Pictures | Request Description - Allow users to set their own contact picture and sync it to other TextSecure users. In contrast to WhatsApp, provide those pictures to the system contact list to be used in any app, including but not limited to TextSecure. Is this possible using a SyncAdapter ( #890 ) coupled with a ContentProvider?
####
Extracted Syntactic ambiguity segment(s):"
31,6459-Signal,"Request Number - 6459 | Request Title - Feature Request: Use Share Intent Subject When Sharing to Signal | Request Description - At the moment, sending a share Intent to Signal will include the EXTRA_TEXT portion of the Intent but not the EXTRA_SUBJECT For example, using this code from another app Intent sendIntent = new Intent (); sendIntent . setAction ( Intent . ACTION_SEND ); sendIntent . putExtra ( Intent . EXTRA_SUBJECT , ""This is the intent title"" ); sendIntent . putExtra ( Intent . EXTRA_TEXT , ""This is the intent body"" ); sendIntent . setType ( ""text/plain"" ); startActivity ( Intent . createChooser ( sendIntent , getResources (). getText ( R . string . send_to ))); Signal will only use the body: ""This is the intent body"" but not use the subject: ""This is the intent title"" This would make it easier to get page titles and other subjects shared from browsers and other apps that set the share Intent's EXTRA_SUBJECT",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 6459 | Request Title - Feature Request: Use Share Intent Subject When Sharing to Signal | Request Description - At the moment, sending a share Intent to Signal will include the EXTRA_TEXT portion of the Intent but not the EXTRA_SUBJECT For example, using this code from another app Intent sendIntent = new Intent (); sendIntent . setAction ( Intent . ACTION_SEND ); sendIntent . putExtra ( Intent . EXTRA_SUBJECT , ""This is the intent title"" ); sendIntent . putExtra ( Intent . EXTRA_TEXT , ""This is the intent body"" ); sendIntent . setType ( ""text/plain"" ); startActivity ( Intent . createChooser ( sendIntent , getResources (). getText ( R . string . send_to ))); Signal will only use the body: ""This is the intent body"" but not use the subject: ""This is the intent title"" This would make it easier to get page titles and other subjects shared from browsers and other apps that set the share Intent's EXTRA_SUBJECT
####
Extracted Syntactic ambiguity segment(s):"
32,3446-Signal,"Request Number - 3446 | Request Title - Let me aggressively invite non-textsecure friends | Request Description - I just set Textsecure as my default SMS app on Android. Every time I send an unconventional SMS, I'd like to invite these users to install Textsecure/Signal, because I want more of my friends to be able to have private conversations with me. I also want Textsecure to spread organically because I think that'd be good for the world! I'd like a preference that would append short invite text and an invite link to every message provided there are enough characters, for example: ""Let's speak privately! SHORTLINK"" or ""Get privacy: SHORTLINK"" or ""Get this! SHORTLINK"" Ideally you'd experiment and figure out whatever text worked the best. For any user that sets their default SMS app as textsecure/signal, you should ask them if they'd like to turn this on.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 3446 | Request Title - Let me aggressively invite non-textsecure friends | Request Description - I just set Textsecure as my default SMS app on Android. Every time I send an unconventional SMS, I'd like to invite these users to install Textsecure/Signal, because I want more of my friends to be able to have private conversations with me. I also want Textsecure to spread organically because I think that'd be good for the world! I'd like a preference that would append short invite text and an invite link to every message provided there are enough characters, for example: ""Let's speak privately! SHORTLINK"" or ""Get privacy: SHORTLINK"" or ""Get this! SHORTLINK"" Ideally you'd experiment and figure out whatever text worked the best. For any user that sets their default SMS app as textsecure/signal, you should ask them if they'd like to turn this on.
####
Extracted Syntactic ambiguity segment(s):"
33,4031-Signal,Request Number - 4031 | Request Title - Cancel media download  | Request Description - Add option to cancel running media downloads Once we go large media this is really needed,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 4031 | Request Title - Cancel media download  | Request Description - Add option to cancel running media downloads Once we go large media this is really needed
####
Extracted Syntactic ambiguity segment(s):"
34,780-Signal,"Request Number - 780 | Request Title - Deduplicate messages | Request Description - Currently TextSecure (2.0.1) can only import messages from the default Android SMS application once. Afterwards doing the same again results in duplicate messages. It would be nice to be able to deduplicate them. I assume that going through the list of messages and comparing from, to, time and text would be sufficient. Then just delete everything except the first occurance. Please excuse me, if this is a duplicate of another issue. It was hard to find good search terms, since ""duplicate"" occurs extremely often as ""duplicate of issue #..."".",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 780 | Request Title - Deduplicate messages | Request Description - Currently TextSecure (2.0.1) can only import messages from the default Android SMS application once. Afterwards doing the same again results in duplicate messages. It would be nice to be able to deduplicate them. I assume that going through the list of messages and comparing from, to, time and text would be sufficient. Then just delete everything except the first occurance. Please excuse me, if this is a duplicate of another issue. It was hard to find good search terms, since ""duplicate"" occurs extremely often as ""duplicate of issue #..."".
####
Extracted Syntactic ambiguity segment(s):"
35,312-Signal,"Request Number - 312 | Request Title - Need Batch Selection Mode for individual messages inside a conversation | Request Description - Deleting individual messages from a conversation is cumbersome and inefficient (Hold down on a message, then select Delete from popup menu, then select Yes on confirmation message, one message at a time). By way of contrast, holding down on a conversation in the Conversations list initiates Batch Selection Mode, allowing user to select multiple conversations for an action (currently Delete is the only option). Being able to trim out fluff from a conversation but keep important messages would be a valuable feature. A similar Batch Selection Mode for individual messages within a conversation (as already exists in the default Android Text Message app) would provide this functionality.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 312 | Request Title - Need Batch Selection Mode for individual messages inside a conversation | Request Description - Deleting individual messages from a conversation is cumbersome and inefficient (Hold down on a message, then select Delete from popup menu, then select Yes on confirmation message, one message at a time). By way of contrast, holding down on a conversation in the Conversations list initiates Batch Selection Mode, allowing user to select multiple conversations for an action (currently Delete is the only option). Being able to trim out fluff from a conversation but keep important messages would be a valuable feature. A similar Batch Selection Mode for individual messages within a conversation (as already exists in the default Android Text Message app) would provide this functionality.
####
Extracted Syntactic ambiguity segment(s):"
36,7567-Signal,"Request Number - 7567 | Request Title - [Feature Request] SMS/Signal Notifications profile | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/signalapp/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. When making Signal as default SMS manager, there is no way to have default SMS notification (Android settings) to be enforced and having the Signal notification settings just for Signal message/call only. Steps to reproduce.  Install Signal and enable SMS support. Actual result: The same Expected result: Use Android notification profile for regular SMS/MMS and use Signal settings for secure messages / call. I use Signal with a limited number of people and I wish to know the difference between regular SMS or secured one by the ringtone (secure messages are mostly more urgent than other SMS). Screenshots. Device info. Device: BlackBerry Motion Android version: 7.1.2 Signal version: 4.16.9 Link to debug log.","['Signal message/call', 'secure messages / call.', 'The same']","Extracted Syntactic ambiguity text segment(s): ['Signal message/call', 'secure messages / call.', 'The same']","[('A modifier is being used between a grouping of two words, which can be interpreted as applying to both words or just the first word, which creates multiple possible meanings.', 'Signal message/call'), ('A modifier is being used between a grouping of two words, which can be interpreted as applying to both words or just the first word, which creates multiple possible meanings.', 'secure messages / call.'), (' An ellipsis is a gap in a sentence cause by omission of a lexically or syntactically necessary constituent.\nElliptical ambiguity occurs when it is not certain whether or not a sentence contains an ellipsis. In this case, ""the same"" seems to be cut off and it is not clear the results is the same to what?', 'The same')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 7567 | Request Title - [Feature Request] SMS/Signal Notifications profile | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/signalapp/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. When making Signal as default SMS manager, there is no way to have default SMS notification (Android settings) to be enforced and having the Signal notification settings just for Signal message/call only. Steps to reproduce.  Install Signal and enable SMS support. Actual result: The same Expected result: Use Android notification profile for regular SMS/MMS and use Signal settings for secure messages / call. I use Signal with a limited number of people and I wish to know the difference between regular SMS or secured one by the ringtone (secure messages are mostly more urgent than other SMS). Screenshots. Device info. Device: BlackBerry Motion Android version: 7.1.2 Signal version: 4.16.9 Link to debug log.
####
Extracted Syntactic ambiguity segment(s):"
37,6031-Signal,Request Number - 6031 | Request Title - Fingerprint unlock | Request Description - Please add fingerprint support for unlocking the app as an alternative to passphrase,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 6031 | Request Title - Fingerprint unlock | Request Description - Please add fingerprint support for unlocking the app as an alternative to passphrase
####
Extracted Syntactic ambiguity segment(s):"
38,253-Signal,"Request Number - 253 | Request Title -  Feature: send schedule | Request Description - The default SMS app on Samsung at least show you to set a time the SMS is to be sent. I use this feature a lot, so need to revert back to the default app to send these messages. Would be great to have this feature added. Thanks.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 253 | Request Title -  Feature: send schedule | Request Description - The default SMS app on Samsung at least show you to set a time the SMS is to be sent. I use this feature a lot, so need to revert back to the default app to send these messages. Would be great to have this feature added. Thanks.
####
Extracted Syntactic ambiguity segment(s):"
39,2055-Signal,"Request Number - 2055 | Request Title - use delivery receipts to show message received time for outgoing messages | Request Description - After long pressing on a message and selecting the info button, the message details are shown. This includes the sent and received times for incoming messages. For outgoing messages, in contrast, only one Sent/Received time is displayed, probably containing sent time. Now that delivery receipts are implemented, it would be possible to display the received time for outgoing messages (by taking the sent time from the receipt). Or to make it more precise, let the receipt message piggybag the real received time. This would make the user interface more consistent. When this is rejected for some reasons, I suggest renaming the ""Sent/Received"" label for outgoing messages to ""Sent"" because this is what it really is about.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 2055 | Request Title - use delivery receipts to show message received time for outgoing messages | Request Description - After long pressing on a message and selecting the info button, the message details are shown. This includes the sent and received times for incoming messages. For outgoing messages, in contrast, only one Sent/Received time is displayed, probably containing sent time. Now that delivery receipts are implemented, it would be possible to display the received time for outgoing messages (by taking the sent time from the receipt). Or to make it more precise, let the receipt message piggybag the real received time. This would make the user interface more consistent. When this is rejected for some reasons, I suggest renaming the ""Sent/Received"" label for outgoing messages to ""Sent"" because this is what it really is about.
####
Extracted Syntactic ambiguity segment(s):"
40,107-Mastodon,"Request Number - 107 | Request Title - Can't view image descriptions | Request Description - I know a screen reader can still read them, but it's important to me to see if there IS a description so I know if I can boost these posts to my disabled followers",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 107 | Request Title - Can't view image descriptions | Request Description - I know a screen reader can still read them, but it's important to me to see if there IS a description so I know if I can boost these posts to my disabled followers
####
Extracted Syntactic ambiguity segment(s):"
41,1065-Signal,"Request Number - 1065 | Request Title - Ask for desired behaviour on first start | Request Description - Would it be possible to ask the user during the first start of the app (right before/after setting the passphrase), to specify the desired behaviour:  only use push use SMS fallback use as default SMS/MMS-App Probably even add a ""what does that mean?"" button which opens a pop-up that explains (in simple words) what every mode does. This would go a long way in making the app more friendly for the less tech-enthusiastic users and those, who don't want to crawl through the settings-menu. edit: corrected formatting.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1065 | Request Title - Ask for desired behaviour on first start | Request Description - Would it be possible to ask the user during the first start of the app (right before/after setting the passphrase), to specify the desired behaviour:  only use push use SMS fallback use as default SMS/MMS-App Probably even add a ""what does that mean?"" button which opens a pop-up that explains (in simple words) what every mode does. This would go a long way in making the app more friendly for the less tech-enthusiastic users and those, who don't want to crawl through the settings-menu. edit: corrected formatting.
####
Extracted Syntactic ambiguity segment(s):"
42,245-Signal,"Request Number - 245 | Request Title - Unable to find to which SIM message was sent | Request Description - Hi, I am using dual sim mobile. I installed TextSecure, but I am unable to know to which SIM the message is sent ? Please help me.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 245 | Request Title - Unable to find to which SIM message was sent | Request Description - Hi, I am using dual sim mobile. I installed TextSecure, but I am unable to know to which SIM the message is sent ? Please help me.
####
Extracted Syntactic ambiguity segment(s):"
43,1761-Signal,Request Number - 1761 | Request Title - Automatic SMS forwarding | Request Description - It would be awesome to be able to automatically forward all incoming SMS from a certain contact to another contact.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1761 | Request Title - Automatic SMS forwarding | Request Description - It would be awesome to be able to automatically forward all incoming SMS from a certain contact to another contact.
####
Extracted Syntactic ambiguity segment(s):"
44,895-Signal,"Request Number - 895 | Request Title - Feature request: Add an option for 'Delayed Sending' | Request Description - I would like a 'Delayed Sending' option to be added to the settings. This is very useful in case you left an embarrassing typo, forgot something important or if you just change your mind and don't want to send the message. Both Chomp SMS and Handcent SMS have this excellent feature. Delay options from 1 to 5 seconds should be enough. Thanks!",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 895 | Request Title - Feature request: Add an option for 'Delayed Sending' | Request Description - I would like a 'Delayed Sending' option to be added to the settings. This is very useful in case you left an embarrassing typo, forgot something important or if you just change your mind and don't want to send the message. Both Chomp SMS and Handcent SMS have this excellent feature. Delay options from 1 to 5 seconds should be enough. Thanks!
####
Extracted Syntactic ambiguity segment(s):"
45,1509-Signal,Request Number - 1509 | Request Title - Adjustable font scaling | Request Description - It would be nice to be able to scale the font size of messages with respect to the system font size.  Sometimes it is convenient to see more conversation history on the screen at the expense of smaller sizes and reduced readability.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1509 | Request Title - Adjustable font scaling | Request Description - It would be nice to be able to scale the font size of messages with respect to the system font size.  Sometimes it is convenient to see more conversation history on the screen at the expense of smaller sizes and reduced readability.
####
Extracted Syntactic ambiguity segment(s):"
46,2798-Signal,Request Number - 2798 | Request Title - [Feature request] Add ability to delete image in image view | Request Description - Currently the only way to delete an image is by long-tapping the image and selecting the delete icon. If you short-tap the image it is displayed in full screen mode. There is already a save icon in that view. My suggestion is to also add a delete icon in that view.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 2798 | Request Title - [Feature request] Add ability to delete image in image view | Request Description - Currently the only way to delete an image is by long-tapping the image and selecting the delete icon. If you short-tap the image it is displayed in full screen mode. There is already a save icon in that view. My suggestion is to also add a delete icon in that view.
####
Extracted Syntactic ambiguity segment(s):"
47,3192-Signal,Request Number - 3192 | Request Title - Image view in fullscreen | Request Description - Remove the action bar in the view where you can inspect a received picture to enlarge the image.,['Remove the action bar in the view where you can inspect a received picture to enlarge the image.'],Extracted Syntactic ambiguity text segment(s): ['Remove the action bar in the view where you can inspect a received picture to enlarge the image.'],"[('""to enlarge the image"" can be attached to two different phrases.', 'Remove the action bar in the view where you can inspect a received picture to enlarge the image.')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 3192 | Request Title - Image view in fullscreen | Request Description - Remove the action bar in the view where you can inspect a received picture to enlarge the image.
####
Extracted Syntactic ambiguity segment(s):"
48,650-Signal,Request Number - 650 | Request Title - Disable SMS only on out-of-country contacts | Request Description - This is a feature request. It would be very handy if I can enable SMS fallback only for the contacts in my country but disable them for contacts out of my country. Usually out-of-country SMS rates are quite high and can run up quite a bill if you have the feature enabled to fallback on SMS. Thanks.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 650 | Request Title - Disable SMS only on out-of-country contacts | Request Description - This is a feature request. It would be very handy if I can enable SMS fallback only for the contacts in my country but disable them for contacts out of my country. Usually out-of-country SMS rates are quite high and can run up quite a bill if you have the feature enabled to fallback on SMS. Thanks.
####
Extracted Syntactic ambiguity segment(s):"
49,1133-Signal,"Request Number - 1133 | Request Title - Deletion of contact keys | Request Description - Hello moxie, could you please let us delete the contact keys? Several of my friends changed their number or uninstalled TextSecure, I'm not liking to scroll threw their contact keys whenever I check them. Let us long press them for deleting, add a warning and everything would be fine.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1133 | Request Title - Deletion of contact keys | Request Description - Hello moxie, could you please let us delete the contact keys? Several of my friends changed their number or uninstalled TextSecure, I'm not liking to scroll threw their contact keys whenever I check them. Let us long press them for deleting, add a warning and everything would be fine.
####
Extracted Syntactic ambiguity segment(s):"
50,5963-Signal,"Request Number - 5963 | Request Title - Block numbers outside my contact list | Request Description - Add an option to allow completely blocking messages from contacts not in my contact list. This is very useful for children, to disable the possibility of them being approached by strangers.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5963 | Request Title - Block numbers outside my contact list | Request Description - Add an option to allow completely blocking messages from contacts not in my contact list. This is very useful for children, to disable the possibility of them being approached by strangers.
####
Extracted Syntactic ambiguity segment(s):"
51,6069-Signal,"Request Number - 6069 | Request Title - Unread notification badges do not work on Huawei EMUI | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. I've installed Signal on a Honor 8 (made by Huawei) with EMUI 4.1 (Android 6.0). I've noticed that Signal receives notifications on new messages and they are also listed in the notification area, but the unread notifications badge on the app icon on the home screen is not shown. In Signal support articles there is mentioned, that badge icons are supported for some launchers, see https://support.whispersystems.org/hc/en-us/articles/215766077-How-can-I-see-my-unread-badge-count-What-launcher-should-I-use- So far I could not find out if this is a Signal or EMUI problem, but Threema and Conversations show the notification badges. Device info. Device: Honor 8 Android version: 6.0 Signal version: 3.26.2",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 6069 | Request Title - Unread notification badges do not work on Huawei EMUI | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. I've installed Signal on a Honor 8 (made by Huawei) with EMUI 4.1 (Android 6.0). I've noticed that Signal receives notifications on new messages and they are also listed in the notification area, but the unread notifications badge on the app icon on the home screen is not shown. In Signal support articles there is mentioned, that badge icons are supported for some launchers, see https://support.whispersystems.org/hc/en-us/articles/215766077-How-can-I-see-my-unread-badge-count-What-launcher-should-I-use- So far I could not find out if this is a Signal or EMUI problem, but Threema and Conversations show the notification badges. Device info. Device: Honor 8 Android version: 6.0 Signal version: 3.26.2
####
Extracted Syntactic ambiguity segment(s):"
52,226-Signal,"Request Number - 226 | Request Title - Ability to edit messages for security | Request Description - My understanding of OTR protocol is that you are guarantied to be the sender of a message when it is received but the protocol also guaranties that nobody can prove a message was sent by you at a later point. Like a real life conversation. ""If know you said something to me, but I can not prove it at a later point"". This is great but unless TextSecure somehow allows people to alter the past of a conversation the app itself does provide a reasonable proof/indication that I said something in the past. Example: My friends phone is ceased and he is compromised to unlock TextSecure. OTR does not in any way guarantee I had our long conversation but since my friend is not a skilled hacker/developer able to alter the TextSecure database the conversation itself it a pretty good indicator/proof of the conversation being authentic. Solution: Add the option to edit a message (any message) from the Android Context Menu just like you can delete a message. Maybe also add the ability to insert a new message next to it.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 226 | Request Title - Ability to edit messages for security | Request Description - My understanding of OTR protocol is that you are guarantied to be the sender of a message when it is received but the protocol also guaranties that nobody can prove a message was sent by you at a later point. Like a real life conversation. ""If know you said something to me, but I can not prove it at a later point"". This is great but unless TextSecure somehow allows people to alter the past of a conversation the app itself does provide a reasonable proof/indication that I said something in the past. Example: My friends phone is ceased and he is compromised to unlock TextSecure. OTR does not in any way guarantee I had our long conversation but since my friend is not a skilled hacker/developer able to alter the TextSecure database the conversation itself it a pretty good indicator/proof of the conversation being authentic. Solution: Add the option to edit a message (any message) from the Android Context Menu just like you can delete a message. Maybe also add the ability to insert a new message next to it.
####
Extracted Syntactic ambiguity segment(s):"
53,2098-Signal,"Request Number - 2098 | Request Title - Automatically resend undelivered messages | Request Description - Since the delivery confirmation functionality has been implemented, I sent 48 messages. For 3 of these, I did not get a confirmation that they have been delivered. It would be nice if messages are automatically resent if no delivery confirmation is received. Especially, if later messages to the same recipient do get a delivery confirmation, indicating that the recipient is reachable again.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 2098 | Request Title - Automatically resend undelivered messages | Request Description - Since the delivery confirmation functionality has been implemented, I sent 48 messages. For 3 of these, I did not get a confirmation that they have been delivered. It would be nice if messages are automatically resent if no delivery confirmation is received. Especially, if later messages to the same recipient do get a delivery confirmation, indicating that the recipient is reachable again.
####
Extracted Syntactic ambiguity segment(s):"
54,1407-Signal,"Request Number - 1407 | Request Title - textsecure not an option when ""sharing"" an address book contact | Request Description - TextSecure is not an option when attempting to share a contact from the address book, in Android 4.4.2 when i select ""messaging"" it tells me ""messaging"" is not the default sms app. This would be a nice feature to have added to the app.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1407 | Request Title - textsecure not an option when ""sharing"" an address book contact | Request Description - TextSecure is not an option when attempting to share a contact from the address book, in Android 4.4.2 when i select ""messaging"" it tells me ""messaging"" is not the default sms app. This would be a nice feature to have added to the app.
####
Extracted Syntactic ambiguity segment(s):"
55,5751-Signal,"Request Number - 5751 | Request Title - Should a swiped-away notification reappear when new messages arrive? | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. A swiped away notification of a received SMS is displayed back after some time. Steps to reproduce.  Receive an SMS Without opening Signal, swipe away the new notification from the Android notification drawer Actual result: After some time the same notification is displayed back. I cannot tell exactly when. Maybe it is event related. Expected result: The notification should not be displayed, once it is swiped away. If another message is received from the same contact/number, a new notification should display the new message (or possibly the swiped away message and the new message). Device info. Device: LGE Nexus 5X (bullhead) Android: 7.0 (3141966, NRD90R) Memory: 15M (1.73% free, 192M max) Memclass: 192 OS Host: vped5.mtv.corp.google.com App: Signal 3.19.1 Link to debug log. https://gist.github.com/nagromc/c2a3a151ba09ed2f38265d3a723b8a52#file-issue-5751-comment-181395245-txt",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5751 | Request Title - Should a swiped-away notification reappear when new messages arrive? | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. A swiped away notification of a received SMS is displayed back after some time. Steps to reproduce.  Receive an SMS Without opening Signal, swipe away the new notification from the Android notification drawer Actual result: After some time the same notification is displayed back. I cannot tell exactly when. Maybe it is event related. Expected result: The notification should not be displayed, once it is swiped away. If another message is received from the same contact/number, a new notification should display the new message (or possibly the swiped away message and the new message). Device info. Device: LGE Nexus 5X (bullhead) Android: 7.0 (3141966, NRD90R) Memory: 15M (1.73% free, 192M max) Memclass: 192 OS Host: vped5.mtv.corp.google.com App: Signal 3.19.1 Link to debug log. https://gist.github.com/nagromc/c2a3a151ba09ed2f38265d3a723b8a52#file-issue-5751-comment-181395245-txt
####
Extracted Syntactic ambiguity segment(s):"
56,6424-Signal,"Request Number - 6424 | Request Title - Improve search for non-contacts | Request Description - We recently made some improvements in Signal-iOS around searching for non-contacts by phone number.  I suggest we have parity on Android.  Fix non-contact lookup for non-US users.¬†SignalServiceKit#130 Further refinements to phone number parsing.¬†SignalServiceKit#139 Let's say user has a US phone number like +12045002827.  They should be able to search for another US phone number like +17043264096 by entering any of:  +17043264096 17043264096 7043264096 They should also be able to search for a non-US phone number like +441733530267 by entering any of:  +441733530267 441733530267 IMO we should try prepending the calling code for the current user's phone number and the calling code that corresponds to the default region for the current device.  I'm not sure how this works on Android, but on iOS users specify their language and region preferences as a system setting.  So for a user living in the US (With a US phone number) but who is Scottish and like seeing dates and times, etc. formatted in UK way and thus uses the UK region, we should try both US and UK calling codes since they are likely to look up users in both places.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 6424 | Request Title - Improve search for non-contacts | Request Description - We recently made some improvements in Signal-iOS around searching for non-contacts by phone number.  I suggest we have parity on Android.  Fix non-contact lookup for non-US users.¬†SignalServiceKit#130 Further refinements to phone number parsing.¬†SignalServiceKit#139 Let's say user has a US phone number like +12045002827.  They should be able to search for another US phone number like +17043264096 by entering any of:  +17043264096 17043264096 7043264096 They should also be able to search for a non-US phone number like +441733530267 by entering any of:  +441733530267 441733530267 IMO we should try prepending the calling code for the current user's phone number and the calling code that corresponds to the default region for the current device.  I'm not sure how this works on Android, but on iOS users specify their language and region preferences as a system setting.  So for a user living in the US (With a US phone number) but who is Scottish and like seeing dates and times, etc. formatted in UK way and thus uses the UK region, we should try both US and UK calling codes since they are likely to look up users in both places.
####
Extracted Syntactic ambiguity segment(s):"
57,604-Signal,"Request Number - 604 | Request Title - Number registration (for push messaging) doesn't work with Google Voice | Request Description - The new push based TextSecure doesn't seem to like using Google Voice numbers (which are then forwarded to my phone's real number via SMS).  Although there are of course privacy downsides associated with letting Google see all of your incoming/outgoing SMS data, there are also serious privacy harms associated with letting people know your actual phone number, rather than a number that will just forward texts to you* The first step of the TextSecure number registration process (""Connecting"") works fine. An incoming text message with the verification code is received by the default Android SMS app, but TextSecure doesn't catch it. Thankfully, after 2 minutes of waiting, I am given the opportunity verify by voice, which does work.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 604 | Request Title - Number registration (for push messaging) doesn't work with Google Voice | Request Description - The new push based TextSecure doesn't seem to like using Google Voice numbers (which are then forwarded to my phone's real number via SMS).  Although there are of course privacy downsides associated with letting Google see all of your incoming/outgoing SMS data, there are also serious privacy harms associated with letting people know your actual phone number, rather than a number that will just forward texts to you* The first step of the TextSecure number registration process (""Connecting"") works fine. An incoming text message with the verification code is received by the default Android SMS app, but TextSecure doesn't catch it. Thankfully, after 2 minutes of waiting, I am given the opportunity verify by voice, which does work.
####
Extracted Syntactic ambiguity segment(s):"
58,802-Signal,"Request Number - 802 | Request Title - Feature Request: import and export keys to file, Bluetooth, QR, and NFC | Request Description - more specificly I'd like to be able to import and export the private key, and public keys to files. I'd also like to be able to import and export public keys via bluetooth, NFC, and QR code. Something like this: https://play.google.com/store/apps/details?id=org.sufficientlysecure.keychain The do key management pretty well, for GPG. (sadly no one writes apps that use their wonderful app, but seriously, best key management app there is.) its also open source, I wonder if you could steal some code from them, and use their key management interface. Reasons I need this new phone, I need to securely wipe the old key, export the old key to a file, and then re-import it. Lost phone, in case I loose my phone, I can reuse the same gpg key. Device immaterial - once I have a back up file of the private key, I can store that on an encrypted parition, or container, and bounce that around as I see fit between devices, PCs, internet storage, etc.. I can then bring it back when I need it. I can also switch between phones at will. For public keys. in addition to reasons 1-3, having a good back up of my friend's public keys, I can easily re-import them, and share them with other people as needed, to make the fewest amounts of key exchanges needed. I can set up phones for people with all the public keys they need. just load them up, and go. This would just make an already good app fucking awesome.","['import and export the private key, and public keys to files.', 'encrypted parition, or container,']","Extracted Syntactic ambiguity text segment(s): ['import and export the private key, and public keys to files.', 'encrypted parition, or container,']","[('More than one conjunction (""and"") is used in the sentence. ', 'import and export the private key, and public keys to files.'), ('Conjunction ""and"" is used with the modifier ""encrypted""', 'encrypted parition, or container,')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 802 | Request Title - Feature Request: import and export keys to file, Bluetooth, QR, and NFC | Request Description - more specificly I'd like to be able to import and export the private key, and public keys to files. I'd also like to be able to import and export public keys via bluetooth, NFC, and QR code. Something like this: https://play.google.com/store/apps/details?id=org.sufficientlysecure.keychain The do key management pretty well, for GPG. (sadly no one writes apps that use their wonderful app, but seriously, best key management app there is.) its also open source, I wonder if you could steal some code from them, and use their key management interface. Reasons I need this new phone, I need to securely wipe the old key, export the old key to a file, and then re-import it. Lost phone, in case I loose my phone, I can reuse the same gpg key. Device immaterial - once I have a back up file of the private key, I can store that on an encrypted parition, or container, and bounce that around as I see fit between devices, PCs, internet storage, etc.. I can then bring it back when I need it. I can also switch between phones at will. For public keys. in addition to reasons 1-3, having a good back up of my friend's public keys, I can easily re-import them, and share them with other people as needed, to make the fewest amounts of key exchanges needed. I can set up phones for people with all the public keys they need. just load them up, and go. This would just make an already good app fucking awesome.
####
Extracted Syntactic ambiguity segment(s):"
59,58-Mastodon,"Request Number - 58 | Request Title - Feature: Open toot with another profile | Request Description - (As I just learned) it's possible to be logged in to multiple profiles in the Mastodon app. When coming across an interesting toot, one might want to boost it not only with the current profile but also with one of the other profiles. Therefore, it would be useful if the three-dot menu of each toot contained an option to open it with another profile. For reference, this is what the feature looks like in Tusky: screen-20220420-144854.mp4",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 58 | Request Title - Feature: Open toot with another profile | Request Description - (As I just learned) it's possible to be logged in to multiple profiles in the Mastodon app. When coming across an interesting toot, one might want to boost it not only with the current profile but also with one of the other profiles. Therefore, it would be useful if the three-dot menu of each toot contained an option to open it with another profile. For reference, this is what the feature looks like in Tusky: screen-20220420-144854.mp4
####
Extracted Syntactic ambiguity segment(s):"
60,520-Signal,"Request Number - 520 | Request Title - Feature: Direct Photo/Video/Audio attachments while staying in app (API calls to camera, sound recorder, video camera) instead of multistep separate apps | Request Description - I love the app... I want to replace it full time from Textra, BUT there is a big draw back, why don't you allow for direct photos, video and sounds to be taken. So you don't have to use two apps to get the file to send. Example: My wife takes a photo of something she wants my opinion on buying, (in textra or native) presses add, camera comes up, takes photo and sends Example: Same situation, but with Text Secure you have to take the photo first and save image, then goto app and add via the menu of ""where"" the documents are to attach and send So, as you can imagine carrying on a conversation and needing to send several photos during that conversation it would be a bit frustrating and very time consuming using Text Secure. Native, Textra and about all others I have used use API's and directly use the photo/audio to send.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 520 | Request Title - Feature: Direct Photo/Video/Audio attachments while staying in app (API calls to camera, sound recorder, video camera) instead of multistep separate apps | Request Description - I love the app... I want to replace it full time from Textra, BUT there is a big draw back, why don't you allow for direct photos, video and sounds to be taken. So you don't have to use two apps to get the file to send. Example: My wife takes a photo of something she wants my opinion on buying, (in textra or native) presses add, camera comes up, takes photo and sends Example: Same situation, but with Text Secure you have to take the photo first and save image, then goto app and add via the menu of ""where"" the documents are to attach and send So, as you can imagine carrying on a conversation and needing to send several photos during that conversation it would be a bit frustrating and very time consuming using Text Secure. Native, Textra and about all others I have used use API's and directly use the photo/audio to send.
####
Extracted Syntactic ambiguity segment(s):"
61,1211-Signal,Request Number - 1211 | Request Title - Chat scrolls when new messages are received | Request Description - When being in a chat and messages are received the chat scrolls with them to the most recent message. So when you have received something over 100 messages (like when you are in an active group chat) you have to scroll quite some time up until you reach the part you read last. It would be far more convenient if the chat stayed where you left it/where the new received messages start and you could then just continue reading.,No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1211 | Request Title - Chat scrolls when new messages are received | Request Description - When being in a chat and messages are received the chat scrolls with them to the most recent message. So when you have received something over 100 messages (like when you are in an active group chat) you have to scroll quite some time up until you reach the part you read last. It would be far more convenient if the chat stayed where you left it/where the new received messages start and you could then just continue reading.
####
Extracted Syntactic ambiguity segment(s):"
62,5476-Signal,"Request Number - 5476 | Request Title - Send using ""Enter"" Key on Hardware Keyboard | Request Description - Feature request: when using an external USB keyboard with my device on Signal, make it possible to send messages using either:  Enter Ctrl+Enter Shift+Enter If desired to send on plain Enter , Shift + Enter should enter a newline.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 5476 | Request Title - Send using ""Enter"" Key on Hardware Keyboard | Request Description - Feature request: when using an external USB keyboard with my device on Signal, make it possible to send messages using either:  Enter Ctrl+Enter Shift+Enter If desired to send on plain Enter , Shift + Enter should enter a newline.
####
Extracted Syntactic ambiguity segment(s):"
63,587-Signal,Request Number - 587 | Request Title - Support an 'invite friends' feature. | Request Description - How about having a handy link (and easily found) to allow users to share your app?,['share your app?'],Extracted Syntactic ambiguity text segment(s): ['share your app?'],"[('A word may have been omitted for brevity that could change the interpretation of the sentence, creating multiple possible meanings.', 'share your app?')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 587 | Request Title - Support an 'invite friends' feature. | Request Description - How about having a handy link (and easily found) to allow users to share your app?
####
Extracted Syntactic ambiguity segment(s):"
64,176-Signal,"Request Number - 176 | Request Title - Feature: Automatic deletion of old messages | Request Description - In the spirit of https://ssd.eff.org/your-computer/protect/retention having deletion of messages older than a certain amount is probably good practice. I previously used an automated tool to delete SMS messages older than 30 days, but since TextSecure uses its own database, this no longer works. Having the option for TextSecure to delete messages older than X (reuse of the passphrase timeout selector would be fine) would be highly helpful.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 176 | Request Title - Feature: Automatic deletion of old messages | Request Description - In the spirit of https://ssd.eff.org/your-computer/protect/retention having deletion of messages older than a certain amount is probably good practice. I previously used an automated tool to delete SMS messages older than 30 days, but since TextSecure uses its own database, this no longer works. Having the option for TextSecure to delete messages older than X (reuse of the passphrase timeout selector would be fine) would be highly helpful.
####
Extracted Syntactic ambiguity segment(s):"
65,4821-Signal,"Request Number - 4821 | Request Title - Manual read receipts | Request Description - I am aware of your view on (automatic) read receipts from #2667 . That's what e.g. WhatsApp does with its blue checkmarks. However I would like to use ""manual read receipts"" in the manner Threema has implemented them (they call it ""acknowledge""): Long-press a received message Select ""acknowledge message"" (I guess so, I use the german translation) Then the ""received"" (or ""seen"") indicator is replaced by an indicator for acknowledgement of the message I choose this to say that I read something over writing ""Ok."" because it doesn't annoy my conversation partner. Most of the time it's sufficient that the partner gets this information the next time he opens Signal and not immediately.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 4821 | Request Title - Manual read receipts | Request Description - I am aware of your view on (automatic) read receipts from #2667 . That's what e.g. WhatsApp does with its blue checkmarks. However I would like to use ""manual read receipts"" in the manner Threema has implemented them (they call it ""acknowledge""): Long-press a received message Select ""acknowledge message"" (I guess so, I use the german translation) Then the ""received"" (or ""seen"") indicator is replaced by an indicator for acknowledgement of the message I choose this to say that I read something over writing ""Ok."" because it doesn't annoy my conversation partner. Most of the time it's sufficient that the partner gets this information the next time he opens Signal and not immediately.
####
Extracted Syntactic ambiguity segment(s):"
66,1064-Signal,"Request Number - 1064 | Request Title - Group Leaving vs Thread Deletion | Request Description - Deleting a group thread looks like leaving a group. But deleting the thread does not remove me from a group, but until someone writes to that group or updates it, i am not able to write to that group, as i have no open thread i could select. I propose: thread deletion for groups should just clear all messages without removing the group from the thread list",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 1064 | Request Title - Group Leaving vs Thread Deletion | Request Description - Deleting a group thread looks like leaving a group. But deleting the thread does not remove me from a group, but until someone writes to that group or updates it, i am not able to write to that group, as i have no open thread i could select. I propose: thread deletion for groups should just clear all messages without removing the group from the thread list
####
Extracted Syntactic ambiguity segment(s):"
67,328-Signal,"Request Number - 328 | Request Title - Feature request: Sending dummy short messages | Request Description - TextSecure could mask meaningful communication between people by occasionally sending dummy random messages to random recipients at random times:  Recipients would be chosen randomly between contacts that knowingly use TextSecure, so it could be recognized as such after decryption and automatically discarded by recipient. ""Randomness"" should be tweaked to level-out the legitimate messages, spoiling the traffic analysis of traffic retention data, preventing to weigh connections in the deducted social network graph or guessing sleeping/activity patterns. People often have many unused messages in their monthly quota, so those could easily be used with no extra cost, or they value their privacy more than some money. Sender would need to enable this feature (opt-in) and define desired quantity (eg max 100 dummy messages per month, 2 dummy messages for every legitimate one, max 500 messages total counting legitimate and dummy ones...). The feature would need to be aware of roaming (disabled by default, optionally enable) and battery level (do not send if bellow eg. 30%). http://en.wikipedia.org/wiki/Traffic_analysis#Countermeasures Possible extensions:  Recipients could be able to let their peers know, that they do not want to participate in this and do not want to receive messages for whatever reason (opt-out). Recipients could also be chosen randomly between other contacts (those not using TextSecure yet) to promote its use (default message) or a custom explanation by sender. Those messages would be in clear text. As this might be annoying it should be very limited (eg max 1 message to a single recipient per month, only during daytime...) to not be too intrusive spam. Dummy messages could contain other peer's phone numbers (random selection from those participating in dummy messaging, not just their contacts), never to be shown to user, just to send dummy messages to, to further mask the real social network. It would be tricky to opt-out later on once your number starts circulating, so opt-outs would need to be spread this way as well and by direct reply dummy message or by defining a TTL of each such number.",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 328 | Request Title - Feature request: Sending dummy short messages | Request Description - TextSecure could mask meaningful communication between people by occasionally sending dummy random messages to random recipients at random times:  Recipients would be chosen randomly between contacts that knowingly use TextSecure, so it could be recognized as such after decryption and automatically discarded by recipient. ""Randomness"" should be tweaked to level-out the legitimate messages, spoiling the traffic analysis of traffic retention data, preventing to weigh connections in the deducted social network graph or guessing sleeping/activity patterns. People often have many unused messages in their monthly quota, so those could easily be used with no extra cost, or they value their privacy more than some money. Sender would need to enable this feature (opt-in) and define desired quantity (eg max 100 dummy messages per month, 2 dummy messages for every legitimate one, max 500 messages total counting legitimate and dummy ones...). The feature would need to be aware of roaming (disabled by default, optionally enable) and battery level (do not send if bellow eg. 30%). http://en.wikipedia.org/wiki/Traffic_analysis#Countermeasures Possible extensions:  Recipients could be able to let their peers know, that they do not want to participate in this and do not want to receive messages for whatever reason (opt-out). Recipients could also be chosen randomly between other contacts (those not using TextSecure yet) to promote its use (default message) or a custom explanation by sender. Those messages would be in clear text. As this might be annoying it should be very limited (eg max 1 message to a single recipient per month, only during daytime...) to not be too intrusive spam. Dummy messages could contain other peer's phone numbers (random selection from those participating in dummy messaging, not just their contacts), never to be shown to user, just to send dummy messages to, to further mask the real social network. It would be tricky to opt-out later on once your number starts circulating, so opt-outs would need to be spread this way as well and by direct reply dummy message or by defining a TTL of each such number.
####
Extracted Syntactic ambiguity segment(s):"
68,7345-Signal,"Request Number - 7345 | Request Title - Better Media Saving Behavior | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. One of the features that was missing for a long time but thankfully has been recently implemented was the ability to swipe through the images without having to keep going back to the index and always having it start at the top. Kudos and thanks for that. However, another element exists that can be greatly improved and probably just got missed; and hopefully can be added. Currently each picture (""media"") provides you the save button on the top. However, it never detects that the item has already been saved and you have to just remember it or go check your on device gallery to see if it is already there. Instead, it simply keeps making duplicates of the item and just incrementing it. It would't be too difficult to do a simple if/exists > show view/share icon else/doesn't > show save icon (as it is now). This will spare the need to save multiple duplicates and incrementing it when you can simply provide a visual check that it has already been saved. It is simply better UX and cleaner that way. Steps to reproduce.  save an item save it again you have a duplicate with a -1 at the end save it again you now have 3 with a -1 and -2 of the same item repeat and goes on as long as you keep saving Expected result: Detect that the item has already been saved and either provide a view icon or share icon to visually indicate it has been saved already, otherwise show the save button. A simple file system check for the item will facilitate this. Thanks in advance.",['without having to keep going back to the index and always having it start at the top.'],Extracted Syntactic ambiguity text segment(s): ['without having to keep going back to the index and always having it start at the top.'],"[('The placement of ""without"" with ""and"" can cause two different grouping options which implies syntactic ambiguity. ', 'without having to keep going back to the index and always having it start at the top.')]","Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 7345 | Request Title - Better Media Saving Behavior | Request Description - I have:   searched open and closed issues for duplicates  read https://github.com/WhisperSystems/Signal-Android/wiki/Submitting-useful-bug-reports  Bug description. One of the features that was missing for a long time but thankfully has been recently implemented was the ability to swipe through the images without having to keep going back to the index and always having it start at the top. Kudos and thanks for that. However, another element exists that can be greatly improved and probably just got missed; and hopefully can be added. Currently each picture (""media"") provides you the save button on the top. However, it never detects that the item has already been saved and you have to just remember it or go check your on device gallery to see if it is already there. Instead, it simply keeps making duplicates of the item and just incrementing it. It would't be too difficult to do a simple if/exists > show view/share icon else/doesn't > show save icon (as it is now). This will spare the need to save multiple duplicates and incrementing it when you can simply provide a visual check that it has already been saved. It is simply better UX and cleaner that way. Steps to reproduce.  save an item save it again you have a duplicate with a -1 at the end save it again you now have 3 with a -1 and -2 of the same item repeat and goes on as long as you keep saving Expected result: Detect that the item has already been saved and either provide a view icon or share icon to visually indicate it has been saved already, otherwise show the save button. A simple file system check for the item will facilitate this. Thanks in advance.
####
Extracted Syntactic ambiguity segment(s):"
69,175-Signal,"Request Number - 175 | Request Title - Featue Request: Quick way to wipe message database | Request Description - Say for some reason you're being coerced with force to disclose your password, could you make a quick way (say a button combo + confirm dialogue) to wipe the text message database?",No Defect Found,Extracted Syntactic ambiguity text segment(s): No Defect Found,,"Syntactic ambiguity: a given sequence of words can be given more than one grammatical structure, and each has a different meaning. In the terminology of compiler construction, syntactic ambiguity occurs when a sentence has more than one parse.
You are a software analyst specializing in ambiguity detection in GitHub feature requests.
Carefully read the given statement. Extract any text segments containing Syntactic ambiguity from the statement. Multiple segments may contain Syntactic ambiguity. If ambiguous segments are found, return a list of tuples where: The first element of each tuple represents the reason why the extracted segment is ambiguous, and the second element is the extracted ambiguous text segment. Strictly make sure that each tuple's elements are enclosed in quotation marks. If no ambiguous segments are found, return ""No Defect Found"".
Statement: Request Number - 175 | Request Title - Featue Request: Quick way to wipe message database | Request Description - Say for some reason you're being coerced with force to disclose your password, could you make a quick way (say a button combo + confirm dialogue) to wipe the text message database?
####
Extracted Syntactic ambiguity segment(s):"
